name: Gitleaks Custom Run 2

on:
  pull_request:
    branches:
      - main

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download and install latest Gitleaks
        run: |
          # Get the latest version number (e.g., 8.24.3 â€” no 'v' prefix)
          LATEST_VERSION=$(curl -s https://api.github.com/repos/gitleaks/gitleaks/releases/latest | jq -r .tag_name | sed 's/^v//')
          echo "Latest Gitleaks version: $LATEST_VERSION"
          # Build the download URL for tar.gz (linux x64)
          DOWNLOAD_URL="https://github.com/gitleaks/gitleaks/releases/download/v${LATEST_VERSION}/gitleaks_${LATEST_VERSION}_linux_x64.tar.gz"
          # Download and extract
          curl -sSL "$DOWNLOAD_URL" -o gitleaks.tar.gz
          tar -xzf gitleaks.tar.gz
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin
          # Verify
          gitleaks version
      - name: Run Gitleaks with custom exit code
        run: |
          gitleaks git -v --config=.github/gitleaks.toml --exit-code=0 --report-format=json --report-path=gitleaks-results.json
      - name: Displaying the results
        run: |
          cat gitleaks-results.json
      - name: Flag newly introduced vulnerabilities and Comment on PR
        run: |
          # Read gitleaks results
          FINDINGS=$(cat gitleaks-results.json)
          # Check if findings exist
          if [ "$(echo "$FINDINGS" | jq 'length')" -gt 0 ]; then
            COMMENT="**Gitleaks Findings:** New vulnerabilities are introduced. Please resolve the issues before merging."
          else
            COMMENT="**Gitleaks Findings:** No new issues were introduced. Good to merge! However, please check and address any other existing issues."
          fi
          # Escape newline characters for JSON
          COMMENT=${COMMENT//$'\n'/\\n}
          # Post the comment on the PR using the GitHub API
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\":\"$COMMENT\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
